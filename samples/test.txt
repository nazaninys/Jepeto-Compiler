class A extends B {
    aA: int;
    cA: C;

    def void fooA() {
        if(true == this.fooA(4)) {
            print(true);
        }
        o = new C(this);
        for(this.a = 0; this.a < 10; this.a = this.a + 1) {
            o.foo();
        }
    }

    def void f2(a: int, b: func<int->C>) {
        return this.foo();
    }

    def void c2(a: list(10 # string), b: list(1 # C)) {
        if (a[0] = "h")
            return this.foo();
    }

    def int f3(i: int) {
        this.f3 = i;
        return 1;
    }
}

class B extends C {
    aB: int;
    cB: C;

    def bool ty(t:int) {
        this.a = this.a + 1;
        return true;
    }

    def void y1(input: A) {
        if (A.foo())
            this.a = this.a + 1;
        else
            this.a = this.a - 1;
        this.C = new C();
    }
}

class C {
    a: int;
    foo: bool;
    def C() {
        a: int;
        b: string;
        j: int;
        a = 2;
        b = a - 2;
        print(a + b);
    }
}

class C1 extends C2 {
    a: int;
    o: C2;

    def list(string, C1, C2) oo(b: int, c: bool) {
        q: list(string, C2, C1);
        c = !!!c;
        this.a = --b;
        b = a++ + (-1) * 2 - r - c;
        b = o.foo(2) + this.bar() - 1 + !c;
        return q;
    }

    def int baer() {
      s: string;
      foreach(s in new A().foo()) {
          print(s);
      }

      foreach(s in this.oo(1, false)) {
          print(s);
      }
      return this.a;
    }
}

class C3 {
    r: int;
    bar: C2;
    def C1 aj() {
        f:func<int->void>;
        l:list(2 # int);
        o: C2;
        fi: int;
        o.foo()[1]();
        o.foo(1)("hello", 4)[5]();
        f(1);
        o[1].r();
        o.a.b()(new C2(), l[1]);
        return new C2();
    }

    def C2(input:C1) {
        r = 0;
    }
}

class C2 {
    i: int;
    def void C2() {
        i = -1;
    }
}


class Main{
  def Main() {
      c: C;
      k: B;
      c = new B();
      c.foo();
  }
}